---

# This reusable workflow assumes that dependencies are managed with Poetry,
# because the business unit AWS has settled on it instead of Pipenv and other dependency managers.

name: Python testing


# Without quotes, this key could be parsed as the boolean true value instead of the string "on"
'on':
  workflow_call:


jobs:

  Flake8:
    name: Lint Python code with Flake8
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out corresponding git branch
        uses: actions/checkout@v3
        with:
          # This job does not require git history
          fetch-depth: 1
      -
        name: Set up Poetry
        uses: ./.github/actions/setup-Poetry
      -
        name: Lint Python code with Flake8
        # Settings are specified in each project's configuration file
        # https://flake8.pycqa.org/en/latest/user/configuration.html
        run: >-
          poetry
          --verbose
          run
          --
          flake8
          --verbose

  Poetry-check:
    name: Validate the structure of pyproject.toml
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out corresponding git branch
        uses: actions/checkout@v3
        with:
          # This job does not require git history
          fetch-depth: 1
      -
        name: Set up Poetry
        uses: evoila/GitHub-Actions/.github/actions/setup-Poetry@stage
      -
        name: Validate the structure of the pyproject.toml
        run: >-
          poetry
          --verbose
          check
